# Generated by Django 5.1.5 on 2025-01-31 18:33

from django.db import migrations

def populate_message_rooms(apps, schema_editor):
    Message = apps.get_model('chat', 'Message')
    Room = apps.get_model('chat', 'Room')
    
    # Group messages by sender-receiver pairs
    messages = Message.objects.all()
    for message in messages:
        users = sorted([message.sender, message.receiver], key=lambda user: user.username)
        room_name = f"chat_{users[0].username}_{users[1].username}"
        
        # Get or create room
        room, _ = Room.objects.get_or_create(name=room_name)
        if not room.participants.filter(id=message.sender.id).exists():
            room.participants.add(message.sender)
        if not room.participants.filter(id=message.receiver.id).exists():
            room.participants.add(message.receiver)
        
        # Update message with room
        message.room = room
        message.save()

def reverse_populate_message_rooms(apps, schema_editor):
    Message = apps.get_model('chat', 'Message')
    Message.objects.all().update(room=None)


class Migration(migrations.Migration):

    dependencies = [
        ('chat', '0002_alter_message_options_room_message_room'),
    ]

    operations = [
    ]
